angular.module('MapController',['ShowServices','TxServices','dataAgency','ruteAgency','dataLain'])//controller yang digunakan untuk dashboard dam map.controller('MapCtrl', function($ionicSideMenuDelegate,$scope, $ionicLoading,$ionicActionSheet,$compile,$ionicPopup,$ionicModal,$state,$timeout,$cordovaGeolocation,Agen,TxData,dataAgency,ruteAgency,masterRute,masterJenis,masterParameter,masterJalur,masterJelajah) {	//google map service	var directionsService = new google.maps.DirectionsService();	var directionsDisplay = new google.maps.DirectionsRenderer({ suppressMarkers:true});	var service = new google.maps.DistanceMatrixService();	var geocoder = new google.maps.Geocoder();	var lokasiSayaMarkers = []; //variable buat nyimpen lokasi saya marker	var legStartMarkers = [];	//variable buat nyimpane lokasi start marker	//end google map service	//array map variable	var markerHasil = []; //variable buat nyimpne marker hasil	var markers = [];	//variable buat nyimpen marker semua agen	var verteks = [];	//variable buat nyimpen verteks destination string	var verteks_zero = [];	//variable buat nyimpen verteks awal new google maps	var initPath = [];	//variable buat nyimpen inisasi path new google maps	var hasilCari = [];	//variable buat nyimpen hasil cari	$scope.hasilCari = [];//scope untuk hasil	//end array map variable	//tanggal variable	var nama_bulan = new Array("Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember");	var nama_hari = new Array("Minggu","Senin","Selasa","Rabu","Kamis","Jumat","Sabtu");	var tgl = new Date();	var hari = tgl.getDay();	var date = tgl.getDate();	var bulan = tgl.getMonth();	var tahun = tgl.getFullYear();	var tgl_pencarian = nama_hari[hari]+','+date+'-'+nama_bulan[bulan]+'-'+tahun;	//end tanggal variable	//array icon	var icon = {travelicon: 'img/marker_travel.png',busicon: 'img/marker_bus.png',mylocation:'img/my_location.png'};	//end array icon		//toggle for menu	$scope.toggleLeft = function() {    	$ionicSideMenuDelegate.toggleLeft(); 	} 	//end toggle for menu 	//Modal Configuration  	$ionicModal.fromTemplateUrl('templates/hasil.html',function(hasilModal){  		$scope.hasilModal = hasilModal;  	},{  		scope:$scope,  		animation:'slide-in-up'  	});  	//end modal configuration  	$scope.showHasilModal = function(){  		$scope.hasilModal.show();  	};  	$scope.removehasilModal =function(){  		$scope.hasilModal.remove();	  		$ionicModal.fromTemplateUrl('templates/hasil.html',function(hasilModal){			$scope.hasilModal = hasilModal;		},{			scope: $scope,			animation:'slide-in-up'		});  	};    //centerOnMe  	$scope.centerOnMe = function() {    	if(!$scope.map) {      		return;    	}		$ionicLoading.show({		    content: 'Loading',		    animation: 'fade-in',		    showBackdrop: true,		    maxWidth: 200	  	});    	var posOptions = {enableHighAccuracy:true,timeout:10000};    	$cordovaGeolocation.getCurrentPosition(posOptions).then(function(pos){   			$scope.map.setCenter(new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude));		 	$timeout(function() {		 	 	$ionicLoading.hide();		    }, 6000);    	},function(error){			$ionicLoading.show({			    content: 'Loading',			    animation: 'fade-in',			    showBackdrop: true,			    maxWidth: 200		  	});		 	$timeout(function() {		 	 	$ionicLoading.hide();		 	 	$ionicPopup.alert({					title: 'Peringatan',					content: "<div align='center'>Gagal Memuat Wilayah Perangkat Anda : "+error+"</div>",					buttons:[{						text:"OK",type:'button-dark',onTap:function(e){							return						}					}]				});		    }, 3000);    	});  	};  	//end center on me  	//customizing marker directions  	$scope.makeMarker = function(pos,icon,title,alamat){  		var contentLokasi = '<div id="content">'+							'<div id="siteNotice">'+'</div>'+							'<b id="firstHeading" class="firstHeading"><u>Lokasi Saya</u></b>'+							'<div id="bodyContent">'+							'Saya berada di '+alamat+							'</div>'+							'</div>';		var infoLokasi = new google.maps.InfoWindow({			content: contentLokasi,			maxWidth:300		});		var legStart = new google.maps.Marker({position:pos,map:$scope.map,icon:icon,title:title});		legStartMarkers.push(legStart);		google.maps.event.addListener(legStart, 'click', function() {			infoLokasi.open($scope.map,legStart);		});  		  	};  	//end customizing marker directions  	//set All Map  	$scope.setAllMap = function(map){		for(var i = 0; i< markers.length;i++){			markers[i].setMap(map);		}	  	};  	//end set all map  	//set pos marker  	$scope.setPosMarker = function(map){  		for(var i = 0;i<lokasiSayaMarkers.length;i++){  			lokasiSayaMarkers[i].setMap(map);  		}  	};  	//end set pos marker  	  	//set Leg  marker  	$scope.setLegStart = function(map){  		for(var i = 0;i<legStartMarkers.length;i++){  			legStartMarkers[i].setMap(map);  		}	  	};  	//end leg marker  	//setMarker Hasil  	$scope.setMarkerHasil = function(map){  		for(var i=0;i<markerHasil.length;i++){  			markerHasil[i].setMap(map);  		}  	};  	//end set Marker hasil  	//set Marker Hasil Null  	$scope.setMarkerHasilNull = function(map){  		$scope.setMarkerHasil(null);  		markerHasil = [];  	};  	//end set Marker Hasil Null  	//make marker hasil   	$scope.makeMarkerHasil = function(lat,ltg,jenis,nama,alamat){  		var markerOptions = [{			position:new google.maps.LatLng(lat, ltg),			map: $scope.map,			icon: icon.busicon},{			position:new google.maps.LatLng(lat, ltg),			map: $scope.map,			icon: icon.travelicon		}]; 		 		var contentAgen = '<div id="content">'+							'<div id="siteNotice">'+'</div>'+							'<b id="firstHeading" class="firstHeading"><u>Lokasi Agen</u></b>'+							'<div id="bodyContent">'+							'Nama Agen : '+nama+'</br>'+							'Alamat Agen : '+alamat+							'</div>'+							'</div>';												if(jenis == 'BUS'){    		markerLoad = new google.maps.Marker(markerOptions[0]);    	}else{    		markerLoad = new google.maps.Marker(markerOptions[1]);    	}		var infowindow = new google.maps.InfoWindow()       			markerHasil.push(markerLoad);		google.maps.event.addListener(markerLoad,'click',(function(markerLoad,contentAgen,infowindow){			return function(){				infowindow.setContent(contentAgen);				infowindow.open($scope.map,markerLoad);			}		})(markerLoad,contentAgen,infowindow));		  	};  	//end marker hasil  	//clear leg marker  	$scope.clearlegStart = function(){  		$scope.setLegStart(null);  		legStartMarkers = [];  	};  	//end clear marker  	//clear marker position  	$scope.clearPosMarker = function(){  		$scope.setPosMarker(null);  		lokasiSayaMarkers = [];  	};  	//end clear marker position  	//Init Map  	$scope.mapCreated = function(map) {    	$scope.map = map;    	$scope.centerOnMe();    	$scope.setPosMarker(map);    	$scope.setLegStart(map);    	$scope.setMarkerHasil(map);    	directionsDisplay.setMap(map);      	$scope.AllAgenOnMap(map);  	  	};  	//end init map  	  	//allagenMap  	$scope.AllAgenOnMap = function(map){  		var posOptions = {enableHighAccuracy:true,timeout:10000};  		Agen.allAgen().then(function(result){    		$cordovaGeolocation.getCurrentPosition(posOptions).then(function(pos){				LatLngMyLocation = new google.maps.LatLng(pos.coords.latitude,pos.coords.longitude);				result.forEach(function(koordinat){	    			var markerLoad;	    			LatLngAgenLocation = new google.maps.LatLng(koordinat.lat_lokasi,koordinat.long_lokasi);	    			service.getDistanceMatrix({	    				origins:[LatLngMyLocation],	    				destinations:[LatLngAgenLocation],	    				travelMode:google.maps.TravelMode.DRIVING,	    				unitSystem:google.maps.UnitSystem.METRIC,	    				avoidHighways:false,	    				avoidTolls:false	    			},function(response,status){	    				if(status != google.maps.DistanceMatrixStatus.OK){	    					console.log('ERROR');			    				}else{	    					var jarak = response.rows[0].elements[0].distance.text;			    			var markerOptions = [{									          		position:new google.maps.LatLng(koordinat.lat_lokasi, koordinat.long_lokasi),									          		map: map,									          		title: koordinat.nama_agen,									          		icon: icon.busicon},{									        		position:new google.maps.LatLng(koordinat.lat_lokasi, koordinat.long_lokasi),										          	map: $scope.map,										          	title: koordinat.nama_agen,										          	icon: icon.travelicon					          					}];					        var contentAgen = '<div id="content">'+'<div id="siteNotice">'+'</div>'+											'<b id="firstHeading" class="firstHeading"><u>'+koordinat.nama_agen+'</u></b>'+											'<div id="bodyContent">'+											'Jenis Agen: '+koordinat.jenis_agen+'</br>'+											'Alamat: '+koordinat.alamat_agen+'</br>'+											'Telepon: <b>'+koordinat.phone_agen_satu+'</b>/<b>'+koordinat.phone_agen_dua+'</b>'+											'</div>'+											'</div>'+											'</div>';																		var compiled = $compile(contentAgen)($scope);			    			var infowindow = new google.maps.InfoWindow({			     					content: compiled[0],			     					maxWidth:300			  				});					        //console.log(koordinat.jenis_agen);				        	if(koordinat.jenis_agen == 'BUS'){				        		markerLoad = new google.maps.Marker(markerOptions[0]);				        	}else{				        		markerLoad = new google.maps.Marker(markerOptions[1]);				        	}				        					        	markers.push(markerLoad);				        	google.maps.event.addListener(markerLoad, 'click', function() {			    				infowindow.open(map,markerLoad);			    			});	    				}	    			});		    		});    		});  		});  	};  	//end all agen  	//show action sheet 	$scope.showActionsheet = function () {  	  	$ionicActionSheet.show({      	titleText: 'Mode Pencarian Lokasi',      	buttons: [        	{          		text: '<i></i> Lokasi Saya'        	},{       	  		text: '<i></i> Cari Berdasarkan Rute Agen'        	},{        		text: '<i></i> Cari Berdasarkan Jenis Agen'        	},{          		text: '<i></i> Cari Berdasarkan Nama Agen'        	}],buttonClicked: function (index) {        		$scope.clearPosMarker(); //clear posisi marker        		$scope.setAllMap($scope.map);	            if(index === 0){	            		            	$scope.lokasiSaya();	            }else if(index === 1){	            	directionsDisplay.setMap($scope.map);	            	Agen.getRuteAll().then(function(rute){	            		$scope.rute = rute;	            		$scope.selectRute = rute[0];	            	});	            	$scope.showModalCari('rute_agen');	            }else if(index === 2){	            	directionsDisplay.setMap($scope.map);	            	Agen.getJenisAgen().then(function(jenis){						$scope.jenis_agens = jenis;						$scope.selectedOption = jenis[0];					});					Agen.getRuteAll().then(function(rute){	            		$scope.rute = rute;	            		$scope.selectRute = rute[0];	            	});	            	$scope.showModalCari('jenis_agen');	            }else{	            	directionsDisplay.setMap($scope.map); 	            	Agen.getNamaAgen().then(function(result){    					$scope.data = result;				    	$scope.selectData = result[0];    				});	            	$scope.showModalCari('nama_agen');	            }	            return true;	      	}    	});  	};  	//end show action  	  	//lokasi saya    $scope.lokasiSaya = function(){		if (!$scope.map) {			return;		}		$ionicLoading.show({		    content: 'Loading',		    animation: 'fade-in',		    showBackdrop: true,		    maxWidth: 200	  	});		//$scope.mapCreated($scope.map); 		var posOptions = {enableHighAccuracy:true,timeout:10000};		$cordovaGeolocation.getCurrentPosition(posOptions).then(function(pos) {			$scope.map.setCenter(new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude));			var lokasiSaya = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);			geocoder.geocode({'latLng':lokasiSaya},function(alamat){				//console.log(alamat);				var contentLokasi = '<div id="content">'+								'<div id="siteNotice">'+'</div>'+								'<b id="firstHeading" class="firstHeading"><u>Lokasi Saya</u></b>'+								'<div id="bodyContent">'+								'Saya berada di '+alamat[0].formatted_address+								'</div>'+								'</div>';				var infoLokasi = new google.maps.InfoWindow({					content: contentLokasi,					maxWidth:300				});				var myLocation = new google.maps.Marker({					position: lokasiSaya,					map: $scope.map,					title: alamat[0].formatted_address,					icon:icon.mylocation				});						lokasiSayaMarkers.push(myLocation);				// google.maps.event.addListener(myLocation,'tap','toggleBounce');				google.maps.event.addListener(myLocation, 'click', function() {					infoLokasi.open($scope.map,myLocation);				});				});			$timeout(function() {		 	 	$ionicLoading.hide();	    	}, 6000);			}, function (error) {				$ionicLoading.show({				    content: 'Loading',				    animation: 'fade-in',				    showBackdrop: true,				    maxWidth: 200			  	});			 	$timeout(function() {			 	 	$ionicLoading.hide();			 	 	$ionicPopup.alert({						title: 'Peringatan',						content: "<div align='center'>Gagal Memuat Posisi Perangkat Anda : "+error+"</div>",						buttons:[{							text:"OK",type:'button-dark',onTap:function(e){								return							}						}]					});			    }, 3000);		});    };    //end lokasi saya         //Modal Configuration  	$ionicModal.fromTemplateUrl('templates/cari.html',function(cariModal){  		$scope.cariModal = cariModal;  	},{  		scope:$scope,  		animation:'slide-in-up'  	});  	//end modal configuration    	//show modal   	$scope.showModalCari = function(cari){  		$scope.cari = cari;  		$scope.jelajah = '1';		$scope.jalur = {id_jalur:'1',jelajah_mode:'TOL'};  		Agen.getParameter().then(function(parameter){  			$scope.paramIdRute = parameter[0].id_param;  			$scope.paramIdJenis = parameter[1].id_param;  			$scope.paramIdNama = parameter[2].id_param;  		});		Agen.getJalur().then(function(jalur){			$scope.Jalur = jalur;		});  		$scope.cariModal.show();  	};  	//end show modal    //toggle button vehicle    $scope.setJelajah = function(type) {        $scope.jelajah = type;    };    $scope.isJelajah = function(type) {        return type === $scope.jelajah;    };    //end toggle button vehicle  	//remove modal  	$scope.removeModalCari = function(){  		$scope.cariModal.remove();		$ionicModal.fromTemplateUrl('templates/cari.html',function(cariModal){			$scope.cariModal = cariModal;		},{			scope: $scope,			animation:'slide-in-up'		});  	};  	//end remove modal 	 	//load rute by rute    $scope.loadRuteByRute = function(search){    	var jRute = search.jRute.$modelValue;    	var paramIdRute = search.paramIdRute.$modelValue;    	$scope.hitungJarak(jRute,paramIdRute,$scope.jelajah,$scope.jalur);    };    //end load rute by rute        //load rute by jenis    $scope.loadRuteByJenis = function(search){    	var jAgen = search.jAgen.$modelValue;    	var paramIdJenis = search.paramIdJenis.$modelValue;    	var jRuteJenis = search.jRuteJenis.$modelValue;    	$scope.hitungJarak2(jAgen,jRuteJenis,paramIdJenis,$scope.jelajah,$scope.jalur);    };    //end load rute by jenis    //load rute by nama    $scope.loadRuteByNama = function(search){    	var jNama = search.jNama.$modelValue;    	var paramIdNama = search.paramIdNama.$modelValue;    	$scope.hitungJarak(jNama,paramIdNama,$scope.jelajah,$scope.jalur);    };    //end load rute by nama    //do insert Cari	$scope.insertCari = function(lat_cari,ltg_cari,parameter,spesifik,jelajah,jalur){		TxData.getIdSpesifik().then(function(id_spesifikasi){			TxData.getIdOpsiMap().then(function(id_opsi_map){				TxData.getIdLokasiPerangkat().then(function(id_lokasi_perangkat){					TxData.insertPencarian(id_opsi_map,tgl_pencarian);					TxData.insertSpesifikasi(id_spesifikasi,parameter,spesifik);					TxData.insertLokasiPerangkat(id_lokasi_perangkat,lat_cari,ltg_cari);					TxData.insertOpsiMap(id_opsi_map,id_spesifikasi,id_lokasi_perangkat,jelajah,jalur);				});			});		});		};	//end do insert cari   //function hitung jarak    $scope.hitungJarak = function(spesifik,parameter,arg_jelajah,arg_jalur){    	$scope.setAllMap(null); //set all map marker null		$scope.setMarkerHasilNull(); //set marker hasil null		$scope.clearlegStart();//clear leg start 		verteks.splice(0,verteks.length);//kosongin verteks		verteks_zero.splice(0,verteks_zero.length);//kosongin verteks zero		initPath.splice(0,initPath.length);//kosongin initpath		$scope.hasilCari.splice(0,$scope.hasilCari.length);//kosongin hasil cari		hasilCari.splice(0,hasilCari.length);//kosongin hasilcari		$ionicLoading.show({		    content: 'Loading',		    animation: 'fade-in',		    showBackdrop: true,		    maxWidth: 200	  	});		var posOptions = {enableHighAccuracy:true,timeout:10000};    	$cordovaGeolocation.getCurrentPosition(posOptions).then(function(pos){    		var posisiSaya = new google.maps.LatLng(-7.056688, 110.428088);    		Agen.getJelajahById(arg_jelajah).then(function(jelajah){    			if(parameter == 1){		    		Agen.getAgenByRute(spesifik.id_tujuan_rute).then(function(results){		    			if(results.length != 0){		    				if(results.length >8){			    				for(var i = 0;i<results.length;i++){					    			verteks.push(results[i].lat_lokasi+','+results[i].long_lokasi);					    			hasilCari.push({cariAgen:results[i].nama_agen,cariAgenAlamat:results[i].alamat_agen});					    			$scope.makeMarkerHasil(results[i].lat_lokasi,results[i].long_lokasi,results[i].jenis_agen,results[i].nama_agen,results[i].alamat_agen);					    		}					    		if(jelajah.id_jelajah == 1){									service.getDistanceMatrix({										origins:[posisiSaya],										destinations:verteks,										travelMode:google.maps.TravelMode[jelajah.mode_jelajah],										unitSystem:google.maps.UnitSystem.METRIC									}, $scope.dijkstra,$scope.errorDijkstra);									$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,spesifik.tujuan_rute,jelajah.id_jelajah,'3');									verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:'3'});					    		}else{					    			$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,spesifik.tujuan_rute,jelajah.id_jelajah,arg_jalur.id_jalur);					    			verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:arg_jalur.id_jalur});						    		if(arg_jalur.id_jalur == 1){										service.getDistanceMatrix({											origins:[posisiSaya],											destinations:verteks,											travelMode:google.maps.TravelMode[jelajah.mode_jelajah],											unitSystem:google.maps.UnitSystem.METRIC,											avoidTolls: true										}, $scope.dijkstra,$scope.errorDijkstra);									}else{										service.getDistanceMatrix({											origins:[posisiSaya],											destinations:verteks,											travelMode:google.maps.TravelMode[jelajah.mode_jelajah],											unitSystem:google.maps.UnitSystem.METRIC,											avoidHighways: true										}, $scope.dijkstra,$scope.errorDijkstra);									}					    		}		    				}else{		    					verteks.push(pos.coords.latitude+','+pos.coords.longitude);		    					initPath.push(new google.maps.LatLng(pos.coords.latitude,pos.coords.longitude));		    					hasilCari.push({cariAgen:"",cariAgenAlamat:""});		    					for(var i = 0;i<results.length;i++){					    			verteks.push(results[i].lat_lokasi+','+results[i].long_lokasi);					    			initPath.push(new google.maps.LatLng(-7.056688, 110.428088));					    			hasilCari.push({cariAgen:results[i].nama_agen,cariAgenAlamat:results[i].alamat_agen});					    			$scope.makeMarkerHasil(results[i].lat_lokasi,results[i].long_lokasi,results[i].jenis_agen,results[i].nama_agen,results[i].alamat_agen);					    		}					    		if(jelajah.id_jelajah == 1){									service.getDistanceMatrix({										origins:initPath,										destinations:verteks,										travelMode:google.maps.TravelMode[jelajah.mode_jelajah],										unitSystem:google.maps.UnitSystem.METRIC									}, $scope.dijkstra,$scope.errorDijkstra);									$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,spesifik.tujuan_rute,jelajah.id_jelajah,'3');									verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:'3'});					    		}else{					    			$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,spesifik.tujuan_rute,jelajah.id_jelajah,arg_jalur.id_jalur);					    			verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:arg_jalur.id_jalur});						    		if(arg_jalur.id_jalur == 1){										service.getDistanceMatrix({											origins:initPath,											destinations:verteks,											travelMode:google.maps.TravelMode[jelajah.mode_jelajah],											unitSystem:google.maps.UnitSystem.METRIC,											avoidTolls: true										}, $scope.dijkstra,$scope.errorDijkstra);									}else{										service.getDistanceMatrix({											origins:initPath,											destinations:verteks,											travelMode:google.maps.TravelMode[jelajah.mode_jelajah],											unitSystem:google.maps.UnitSystem.METRIC,											avoidHighways: true										}, $scope.dijkstra,$scope.errorDijkstra);									}					    		}		    				}						 	$timeout(function() {						 		$scope.removeModalCari();						 	 	$ionicLoading.hide();						    }, 6000);		    			}else{				    		$ionicLoading.show({							    content: 'Loading',							    animation: 'fade-in',							    showBackdrop: true,							    maxWidth: 200						  	});						 	$timeout(function() {						 		$scope.removeModalCari();						 	 	$ionicLoading.hide();						 	 	$ionicPopup.alert({									title: 'Peringatan',									content: "<div align='center'>Tidak Ada Hasil Dari Parameter Rute Dengan Rute Tujuan : "+spesifik.tujuan_rute+"</div>",									buttons:[{										text:"OK",type:'button-dark',onTap:function(e){											return										}									}]								});						    }, 3000);		    			}		    		});		    		}else if(parameter == 3){	    			Agen.getAgenByNama(spesifik.nama_agen).then(function(results){		    			if(results.length != 0){		    				if(results.length >8){			    				for(var i = 0;i<results.length;i++){					    			verteks.push(results[i].lat_lokasi+','+results[i].long_lokasi);					    			hasilCari.push({cariAgen:results[i].nama_agen,cariAgenAlamat:results[i].alamat_agen});					    			$scope.makeMarkerHasil(results[i].lat_lokasi,results[i].long_lokasi,results[i].jenis_agen,results[i].nama_agen,results[i].alamat_agen);					    		}					    		if(jelajah.id_jelajah == 1){									service.getDistanceMatrix({										origins:[posisiSaya],										destinations:verteks,										travelMode:google.maps.TravelMode[jelajah.mode_jelajah],										unitSystem:google.maps.UnitSystem.METRIC									}, $scope.dijkstra,$scope.errorDijkstra);									$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,spesifik.nama_agen,jelajah.id_jelajah,'3');									verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:'3'});					    		}else{					    			$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,spesifik.nama_agen,jelajah.id_jelajah,arg_jalur.id_jalur);					    			verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:arg_jalur.id_jalur});						    		if(arg_jalur.id_jalur == 1){										service.getDistanceMatrix({											origins:[posisiSaya],											destinations:verteks,											travelMode:google.maps.TravelMode[jelajah.mode_jelajah],											unitSystem:google.maps.UnitSystem.METRIC,											avoidTolls: true										}, $scope.dijkstra,$scope.errorDijkstra);									}else{										service.getDistanceMatrix({											origins:[posisiSaya],											destinations:verteks,											travelMode:google.maps.TravelMode[jelajah.mode_jelajah],											unitSystem:google.maps.UnitSystem.METRIC,											avoidHighways: true										}, $scope.dijkstra,$scope.errorDijkstra);									}					    		}		    				}else{		    					hasilCari.push({cariAgen:"",cariAgenAlamat:""});		    					verteks.push(pos.coords.latitude+','+pos.coords.longitude);		    					initPath.push(new google.maps.LatLng(-7.056688, 110.428088));		    					for(var i = 0;i<results.length;i++){					    			verteks.push(results[i].lat_lokasi+','+results[i].long_lokasi);					    			initPath.push(new google.maps.LatLng(results[i].lat_lokasi,results[i].long_lokasi));					    			hasilCari.push({cariAgen:results[i].nama_agen,cariAgenAlamat:results[i].alamat_agen});					    			$scope.makeMarkerHasil(results[i].lat_lokasi,results[i].long_lokasi,results[i].jenis_agen,results[i].nama_agen,results[i].alamat_agen);					    		}					    		if(jelajah.id_jelajah == 1){									service.getDistanceMatrix({										origins:initPath,										destinations:verteks,										travelMode:google.maps.TravelMode[jelajah.mode_jelajah],										unitSystem:google.maps.UnitSystem.METRIC									}, $scope.dijkstra,$scope.errorDijkstra);									$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,spesifik.nama_agen,jelajah.id_jelajah,'3');									verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:'3'});					    		}else{					    			$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,spesifik.nama_agen,jelajah.id_jelajah,arg_jalur.id_jalur);					    			verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:arg_jalur.id_jalur});						    		if(arg_jalur.id_jalur == 1){										service.getDistanceMatrix({											origins:initPath,											destinations:verteks,											travelMode:google.maps.TravelMode[jelajah.mode_jelajah],											unitSystem:google.maps.UnitSystem.METRIC,											avoidTolls: true										}, $scope.dijkstra,$scope.errorDijkstra);									}else{										service.getDistanceMatrix({											origins:initPath,											destinations:verteks,											travelMode:google.maps.TravelMode[jelajah.mode_jelajah],											unitSystem:google.maps.UnitSystem.METRIC,											avoidHighways: true										}, $scope.dijkstra,$scope.errorDijkstra);									}					    		}		    				}						 	$timeout(function() {						 		$scope.removeModalCari();						 	 	$ionicLoading.hide();						    }, 3000);		    			}else{				    		$ionicLoading.show({							    content: 'Loading',							    animation: 'fade-in',							    showBackdrop: true,							    maxWidth: 200						  	});						 	$timeout(function() {						 		$scope.removeModalCari();						 	 	$ionicLoading.hide();						 	 	$ionicPopup.alert({									title: 'Peringatan',									content: "<div align='center'>Tidak Ada Hasil Dari Parameter Nama Agen Dengan Nama Agen : "+spesifik.nama_agen+"</div>",									buttons:[{										text:"OK",type:'button-dark',onTap:function(e){											return										}									}]								});						    }, 3000);		    			}	    			});	    		}	    	});    	},function(error){    		$ionicLoading.show({			    content: 'Loading',			    animation: 'fade-in',			    showBackdrop: true,			    maxWidth: 200		  	});		 	$timeout(function() {		 		$scope.removeModalCari();		 	 	$ionicLoading.hide();		 	 	$ionicPopup.alert({					title: 'Peringatan',					content: "<div align='center'>Gagal Melakukan Pencarian, Karena : "+error+"</div>",					buttons:[{						text:"OK",type:'button-dark',onTap:function(e){							return						}					}]				});		    }, 3000);    	});      };    //end hitung jarak    //hitung jarak 2    $scope.hitungJarak2 = function(jenis_agen,rute,parameter,arg_jelajah,arg_jalur){    	    	$scope.setAllMap(null);    	$scope.setMarkerHasilNull();		$scope.clearlegStart();		verteks.splice(0,verteks.length);		verteks_zero.splice(0,verteks_zero.length);		initPath.splice(0,initPath.length);		$scope.hasilCari.splice(0,$scope.hasilCari.length);		hasilCari.splice(0,hasilCari.length);    	$ionicLoading.show({		    content: 'Loading',		    animation: 'fade-in',		    showBackdrop: true,		    maxWidth: 200	  	});    	var posOptions = {enableHighAccuracy:true,timeout:10000};    	$cordovaGeolocation.getCurrentPosition(posOptions).then(function(pos){	    	var posisiSaya = new google.maps.LatLng(pos.coords.latitude,pos.coords.longitude);			Agen.getJelajahById(arg_jelajah).then(function(jelajah){	    		Agen.getAgenByJenis(jenis_agen.id_jenis,rute.id_tujuan_rute).then(function(results){	    			if(results.length != 0){	    				if(results.length >8){		    				for(var i = 0;i<results.length;i++){				    			verteks.push(results[i].lat_lokasi+','+results[i].long_lokasi);				    			hasilCari.push({cariAgen:results[i].nama_agen,cariAgenAlamat:results[i].alamat_agen});				    			$scope.makeMarkerHasil(results[i].lat_lokasi,results[i].long_lokasi,jenis_agen.jenis_agen,results[i].nama_agen,results[i].alamat_agen);				    		}				    		if(jelajah.id_jelajah == 1){								service.getDistanceMatrix({									origins:[posisiSaya],									destinations:verteks,									travelMode:google.maps.TravelMode[jelajah.mode_jelajah],									unitSystem:google.maps.UnitSystem.METRIC								}, $scope.dijkstra,$scope.errorDijkstra);								$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,jenis_agen.jenis_agen+' DAN '+rute.tujuan_rute,jelajah.id_jelajah,'3');								verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:'3'});				    		}else{				    			$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,jenis_agen.jenis_agen+' DAN '+rute.tujuan_rute,jelajah.id_jelajah,arg_jalur.id_jalur);				    			verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:arg_jalur.id_jalur});					    		if(arg_jalur.id_jalur == 1){									service.getDistanceMatrix({										origins:[posisiSaya],										destinations:verteks,										travelMode:google.maps.TravelMode[jelajah.mode_jelajah],										unitSystem:google.maps.UnitSystem.METRIC,										avoidTolls: true									}, $scope.dijkstra,$scope.errorDijkstra);								}else{									service.getDistanceMatrix({										origins:[posisiSaya],										destinations:verteks,										travelMode:google.maps.TravelMode[jelajah.mode_jelajah],										unitSystem:google.maps.UnitSystem.METRIC,										avoidHighways: true									}, $scope.dijkstra,$scope.errorDijkstra);								}				    		}	    				}else{	    					verteks.push(pos.coords.latitude+','+pos.coords.longitude);	    					initPath.push(new google.maps.LatLng(pos.coords.latitude,pos.coords.longitude));	    					hasilCari.push({cariAgen:"",cariAgenAlamat:""});	    					for(var i = 0;i<results.length;i++){				    			verteks.push(results[i].lat_lokasi+','+results[i].long_lokasi);				    			initPath.push(new google.maps.LatLng(results[i].lat_lokasi,results[i].long_lokasi));				    			hasilCari.push({cariAgen:results[i].nama_agen,cariAgenAlamat:results[i].alamat_agen});				    			$scope.makeMarkerHasil(results[i].lat_lokasi,results[i].long_lokasi,jenis_agen.jenis_agen,results[i].nama_agen,results[i].alamat_agen);				    		}				    		if(jelajah.id_jelajah == 1){								service.getDistanceMatrix({									origins:initPath,									destinations:verteks,									travelMode:google.maps.TravelMode[jelajah.mode_jelajah],									unitSystem:google.maps.UnitSystem.METRIC								}, $scope.dijkstra,$scope.errorDijkstra);								$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,jenis_agen.jenis_agen+' DAN '+rute.tujuan_rute,jelajah.id_jelajah,'3');								verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:'3'});				    		}else{				    			$scope.insertCari(pos.coords.latitude,pos.coords.longitude,parameter,jenis_agen.jenis_agen+' DAN '+rute.tujuan_rute,jelajah.id_jelajah,arg_jalur.id_jalur);				    			verteks_zero.push({lat:pos.coords.latitude,ltg:pos.coords.longitude,jelajah:jelajah.mode_jelajah,jalur:arg_jalur.id_jalur});					    		if(arg_jalur.id_jalur == 1){									service.getDistanceMatrix({										origins:initPath,										destinations:verteks,										travelMode:google.maps.TravelMode[jelajah.mode_jelajah],										unitSystem:google.maps.UnitSystem.METRIC,										avoidTolls: true									}, $scope.dijkstra,$scope.errorDijkstra);								}else{									service.getDistanceMatrix({										origins:initPath,										destinations:verteks,										travelMode:google.maps.TravelMode[jelajah.mode_jelajah],										unitSystem:google.maps.UnitSystem.METRIC,										avoidHighways: true									}, $scope.dijkstra,$scope.errorDijkstra);								}				    		}	    				}					 	$timeout(function() {					 		$scope.removeModalCari();					 	 	$ionicLoading.hide();					    }, 6000);	    			}else{			    		$ionicLoading.show({						    content: 'Loading',						    animation: 'fade-in',						    showBackdrop: true,						    maxWidth: 200					  	});					 	$timeout(function() {					 		$scope.removeModalCari();					 	 	$ionicLoading.hide();					 	 	$ionicPopup.alert({								title: 'Peringatan',								content: "<div align='center'>Tidak Ada Hasil Dari Parameter Jenis Agen Dengan Jenis Agen Agen : "+jenis_agen.jenis_agen+" dan Rute Tujuan Agen "+rute.tujuan_rute+"</div>",								buttons:[{								text:"OK",type:'button-dark',onTap:function(e){									return								}					}]							});					    }, 3000);	    			}	    		});		    });	    },function(error){    		$ionicLoading.show({			    content: 'Loading',			    animation: 'fade-in',			    showBackdrop: true,			    maxWidth: 200		  	});		 	$timeout(function() {		 		$scope.removeModalCari();		 	 	$ionicLoading.hide();		 	 	$ionicPopup.alert({					title: 'Peringatan',					content: "<div align='center'>Gagal Melakukan Pencarian, Karena : "+error+"</div>",					buttons:[{						text:"OK",type:'button-dark',onTap:function(e){							return						}					}]				});		    }, 3000);    	});  	    };    //end hitung jarak 2    //dijkstra function    $scope.dijkstra = function(response,status){		if(status == google.maps.DistanceMatrixStatus.OK){			if(response.originAddresses.length > 1){				//console.log(response);				var routes = response.rows;				var origins = response.originAddresses;				var destinations = response.destinationAddresses;				var pathResult = [];				var hasil =[];						for(var i=0;i<origins.length;i++){					var hasilX = response.rows[i].elements;					for(var j=0;j<origins.length;j++){						//console.log('Jarak antara '+origins[i]+' dan '+destinations[j]+' adalah '+hasil[j].distance.text);												pathResult.push({identitas:i+','+j,pathAwal:verteks[i],pathAgenTujuan:verteks[j],pathLength:hasilX[j].distance.value});					}				}				console.log(pathResult);				for(var i=1;i<destinations.length;i++){					$scope.hasilCari.push({nama_agen:hasilCari[i].cariAgen,alamat_agen:hasilCari[i].cariAgenAlamat,jarak:response.rows[0].elements[i].distance.text});					//console.log(hasilCari[i]);				}								for(var i=1;i<destinations.length;i++){					var newPathLength = pathResult[i].pathLength;					var newPath = pathResult[i].pathAgenTujuan;					//console.log(newPath);					if(hasil.length == 0){						var oldPathLength = pathResult[1].pathLength;						if(oldPathLength>newPathLength ){							hasil.push({path:newPath,pathLength:newPathLength});						}else{							hasil.push({path:pathResult[1].pathAgenTujuan,pathLength:pathResult[1].pathLength});						}					}else{						var oldPathLength = hasil[0].pathLength;											if(oldPathLength>newPathLength){							hasil.splice(0,hasil.length);							hasil.push({path:newPath,pathLength:newPathLength});						}					}				}								console.log(hasil);				var start = new google.maps.LatLng(verteks_zero[0].lat,verteks_zero[0].ltg);				var end = hasil[0].path;				navigasiDijkstra(start,end,verteks_zero[0].jelajah,verteks_zero[0].jalur);			}else{				var routes = response.rows[0];				console.log(response);				var pathResult =[];				var hasil =[];								for(var i = 0;i<routes.elements.length;i++){					var rteLength = routes.elements[i].distance.value;					pathResult.push({path:verteks[i],pathLength:rteLength});					$scope.hasilCari.push({nama_agen:hasilCari[i].cariAgen,alamat_agen:hasilCari[i].cariAgenAlamat,jarak:response.rows[0].elements[i].distance.text});				}				for(var i=0;i<pathResult.length;i++){					var newPathLength = pathResult[i].pathLength;					var newPath = pathResult[i].path;					if(hasil.length == 0){						var oldPathLength = pathResult[0].pathLength;												if(oldPathLength>newPathLength ){							hasil.push({path:newPath,pathLength:newPathLength});						}else{							hasil.push({path:pathResult[0].path,pathLength:pathResult[0].pathLength});						}					}else{						var oldPathLength = hasil[0].pathLength;											if(oldPathLength>newPathLength){							hasil.splice(0,hasil.length);							hasil.push({path:newPath,pathLength:newPathLength});						}					}				}				console.log(hasil);				var start = new google.maps.LatLng(verteks_zero[0].lat,verteks_zero[0].ltg);				var end = hasil[0].path;				navigasiDijkstra(start,end,verteks_zero[0].jelajah,verteks_zero[0].jalur);			}		}    };    //end directions dijkstra    //errorDijkstra    $scope.errorDijkstra = function(error){		$ionicLoading.show({		    content: 'Loading',		    animation: 'fade-in',		    showBackdrop: true,		    maxWidth: 200	  	});	 	$timeout(function() {	 		$scope.removeModalCari();	 	 	$ionicLoading.hide();	 	 	$ionicPopup.alert({				title: 'Peringatan',				content: "<div align='center'>Gagal Memuat Jarak Terdekat, Karena : "+error+"</div>",				buttons:[{					text:"OK",type:'button-dark',onTap:function(e){						return					}				}]			});	    }, 3000);    };    //end Error Dijkstra    //Show Navigation on map	function navigasiDijkstra(start, end,jelajah,jalur) {	    if(jalur == '1'){			var request = {		        origin: start,		        destination: end,		        optimizeWaypoints: true,		        travelMode: google.maps.TravelMode[jelajah],		        avoidTolls:true		    };		}else if(jalur == '2'){			var request = {		        origin: start,		        destination: end,		        optimizeWaypoints: true,		        travelMode: google.maps.TravelMode[jelajah],		        avoidHighways:true		    };		}else{			var request = {		        origin: start,		        destination: end,		        optimizeWaypoints: true,		        travelMode: google.maps.TravelMode[jelajah]		    };		}		geocoder.geocode({'latLng':start},function(alamat){		    directionsService.route(request, function (result, status) {		        if (status == google.maps.DirectionsStatus.OK) {		            directionsDisplay.setDirections(result);		            		           	var leg = result.routes[ 0 ].legs[ 0 ];	            	leg_start = $scope.makeMarker( leg.start_location, new google.maps.MarkerImage(icon.mylocation), "Mulai",alamat[0].formatted_address );							            //$scope.setAllMap(null);		        }		    },function(error){			    $ionicLoading.show({				    content: 'Loading',				    animation: 'fade-in',				    showBackdrop: true,				    maxWidth: 200			  	});			 	$timeout(function() {			 	 	$ionicLoading.hide();			 	 	$ionicPopup.alert({						title: 'Peringatan',						content: "<div align='center'>Gagal Melakukan Memuat Navigasi Ke Tujuan, Karena : "+error+"</div>",						buttons:[{							text:"OK",type:'button-dark',onTap:function(e){								return							}						}]					});			    }, 3000);		    });	    });	};	//end show navigations});